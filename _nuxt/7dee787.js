(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{284:function(module,exports){eval('\nmodule.exports = { \n      attributes: {"title":"Introducción al protocolo CAN","year":2020,"month":7,"day":17,"hour":"00:25","excerpt":"El protocolo de comunicaciones CAN (Controller Area Network), un protocolo muy interesante por su versatilidad y sobre todo por todo lo que ofrece, quizá deberías considerarlo si te interesa realizar una comunicación segura y a prueba de errores","picture":"/images/blog/can/can.png"},\n    \n      html: "<p>El protocolo de comunicación CAN (Controller Area Network), un protocolo muy interesante por su versatilidad y sobre todo por todo lo que ofrece, quizá deberías considerarlo si te interesa realizar una comunicación segura y a prueba de errores</p>\\n<h1 id=\\"contenido\\"><a id=\\"user-content-contenido\\" class=\\"anchor\\" href=\\"#contenido\\" aria-hidden=\\"true\\"><svg aria-hidden=\\"true\\" class=\\"octicon octicon-link\\" height=\\"16\\" version=\\"1.1\\" viewbox=\\"0 0 16 16\\" width=\\"16\\"><path d=\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\"></path></svg></a>Contenido</h1>\\n<ol>\\n<li><a href=\\"#que-es\\">🤔¿Qué es?</a></li>\\n<li><a href=\\"#can-estandar-y-extendido\\">CAN estándar y CAN extendido</a>\\n<ol>\\n<li><a href=\\"#can-estandar\\">Estándar</a></li>\\n<li><a href=\\"#can-extendido\\">Extendido</a></li>\\n</ol>\\n</li>\\n<li><a href=\\"#mensajes\\">Mensajes</a>\\n<ol>\\n<li><a href=\\"#arbitraje\\">Arbitraje</a></li>\\n<li><a href=\\"#tipos-de-mensajes\\">Tipos</a></li>\\n</ol>\\n</li>\\n<li><a href=\\"#fin\\">Fin</a></li>\\n</ol>\\n<br>\\n<h1 id=\\"que-es\\"><a id=\\"user-content-¿qué-es\\" class=\\"anchor\\" href=\\"#¿qué-es\\" aria-hidden=\\"true\\"><svg aria-hidden=\\"true\\" class=\\"octicon octicon-link\\" height=\\"16\\" version=\\"1.1\\" viewbox=\\"0 0 16 16\\" width=\\"16\\"><path d=\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\"></path></svg></a>¿Qué es?</h1>\\n<p>CAN es un protocolo desarrollado por Bosch, pensado para ser utilizado en automoviles, es un protocolo serial y desarrollado\\npara reemplazar otros protocolos, de la misma forma, por especificación es altamente inmune a interferencias electricas,\\nde autodiagonsticarse y reparar algunos datos con errores. Debido a todo esto, ha crecido su popularidad, siendo utilizado\\ntambién en entornos médicos, manufactura, aviación, trenes, entre otros sectores.</p>\\n<p>El estandar se adhiere al modelo OSI, quedando de esta manera</p>\\n<table>\\n<thead>\\n<tr>\\n<th>OSI</th>\\n<th>CAN</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Aplicación</td>\\n<td>Microcontroladores o DSP</td>\\n</tr>\\n<tr>\\n<td>Enlace de datos</td>\\n<td>Controlador CAN</td>\\n</tr>\\n<tr>\\n<td>Capa física</td>\\n<td>Controlador CAN y <em>transceiver</em> CAN</td>\\n</tr>\\n</tbody>\\n</table>\\n<p>Actualmente esta estandarizado bajo la <a href=\\"https://www.iso.org/standard/63648.html\\">ISO</a>, además, es fácil encontrar\\nmicrocontroladores y placas de desarrollo con controladores CAN integrados, algunas empresas que brindan dispositivos con CAN:</p>\\n<ul>\\n<li>STMicroelectronics</li>\\n<li>NXP</li>\\n<li>Microchip</li>\\n<li>Espressif</li>\\n<li>Texas Instruments</li>\\n</ul>\\n<p>CAN no define ningún tipo de conector para el bus CAN</p>\\n<h1 id=\\"can-estandar-y-extendido\\"><a id=\\"user-content-can-estándar-y-extendido\\" class=\\"anchor\\" href=\\"#can-estándar-y-extendido\\" aria-hidden=\\"true\\"><svg aria-hidden=\\"true\\" class=\\"octicon octicon-link\\" height=\\"16\\" version=\\"1.1\\" viewbox=\\"0 0 16 16\\" width=\\"16\\"><path d=\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\"></path></svg></a>CAN estándar y extendido</h1>\\n<p>Se definen dos modos de operación para CAN, estándar y extendido, a continuación veremos de que trata cada uno.</p>\\n<h2 id=\\"can-estandar\\"><a id=\\"user-content-can-estándar\\" class=\\"anchor\\" href=\\"#can-estándar\\" aria-hidden=\\"true\\"><svg aria-hidden=\\"true\\" class=\\"octicon octicon-link\\" height=\\"16\\" version=\\"1.1\\" viewbox=\\"0 0 16 16\\" width=\\"16\\"><path d=\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\"></path></svg></a>CAN estándar</h2>\\n<p>Una trama en CAN estándar tiene la siguiente forma</p>\\n<div style=\\"overflow-x: auto\\">\\n<table>\\n<thead>\\n<tr>\\n<th>SOF</th>\\n<th>Identificador</th>\\n<th>RTR</th>\\n<th>IDE</th>\\n<th>r0</th>\\n<th>DLC</th>\\n<th>datos</th>\\n<th>CRC</th>\\n<th>ACK</th>\\n<th>EOF</th>\\n<th>IFS</th>\\n</tr>\\n</thead>\\n<tbody></tbody>\\n</table>\\n</div>\\n<p>Cada uno de estos campos consta de 1 bit a menos que se indique lo contrario.</p>\\n<ul>\\n<li>SOF (Start Of Frame): es dominante e indica el inicio de la trama</li>\\n<li>Identificador: 11 bits, establece la prioridad del mensaje, los mensajes con más prioridad tienen valores más bajos, por ejemplo, el id &quot;0&quot; es el de mayor prioridad.</li>\\n<li>RTR (Remote Transmission Request): este bit es dominante cuando se solicita información de otro nodo.</li>\\n<li>IDE (Identifier Extension): es un bit dominante para indicar que es CAN estándar, es recesivo para indicar que es CAN extendido.</li>\\n<li>r0 (reserved): bit reservado</li>\\n<li>DLC (Data Length Code): 4 bits que indican la cantidad de bytes que se transmitirán</li>\\n<li>Data: hasta 64 bits, son los datos que se desean transmitir.</li>\\n<li>CRC (Cyclic Redundancy Check): 16 bits (15 y un delimitador), esta parte contiene el checksum y se utiliza para detectar errores.</li>\\n<li>ACK (Acknowledgment): 2 bits, uno es el ACK y otro es un delimitador, cada nodo que reciba un mensaje correcto, sobreescribe este bit, inicialmente recesivo por un bit dominante.</li>\\n<li>EOF (End Of Frame): 7 bits, marca el fin de la trama CAN, tiene fines de verificación de errores.</li>\\n<li>IFS (Interframe Space): contiene el tiempo requerido por un controlador para mover una trama correcta a un buffer de mensajes (para la aplicación).</li>\\n</ul>\\n<h2 id=\\"can-extendido\\"><a id=\\"user-content-can-extendido\\" class=\\"anchor\\" href=\\"#can-extendido\\" aria-hidden=\\"true\\"><svg aria-hidden=\\"true\\" class=\\"octicon octicon-link\\" height=\\"16\\" version=\\"1.1\\" viewbox=\\"0 0 16 16\\" width=\\"16\\"><path d=\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\"></path></svg></a>CAN extendido</h2>\\n<p>Una trama CAN tiene la siguiente forma.</p>\\n<div style=\\"overflow-x: auto\\">\\n<table>\\n<thead>\\n<tr>\\n<th>SOF</th>\\n<th>Identificador</th>\\n<th>SRR</th>\\n<th>IDE</th>\\n<th>Identificador</th>\\n<th>r1</th>\\n<th>r0</th>\\n<th>DLC</th>\\n<th>Data</th>\\n<th>CRC</th>\\n<th>ACK</th>\\n<th>EOF</th>\\n<th>IFS</th>\\n</tr>\\n</thead>\\n<tbody></tbody>\\n</table>\\n</div>\\n<p>Los bits son los mismos, salvo:</p>\\n<ul>\\n<li>SRR (Substitute Remote Request): es un placeholder.</li>\\n<li>IDE: ahora es recesivo para indicar que los siguientes 18 bits bits forman parte del identificador.</li>\\n<li>r1: un bit más reservado</li>\\n</ul>\\n<h1 id=\\"mensajes\\"><a id=\\"user-content-mensajes\\" class=\\"anchor\\" href=\\"#mensajes\\" aria-hidden=\\"true\\"><svg aria-hidden=\\"true\\" class=\\"octicon octicon-link\\" height=\\"16\\" version=\\"1.1\\" viewbox=\\"0 0 16 16\\" width=\\"16\\"><path d=\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\"></path></svg></a>Mensajes</h1>\\n<h2 id=\\"arbitraje\\"><a id=\\"user-content-arbitraje\\" class=\\"anchor\\" href=\\"#arbitraje\\" aria-hidden=\\"true\\"><svg aria-hidden=\\"true\\" class=\\"octicon octicon-link\\" height=\\"16\\" version=\\"1.1\\" viewbox=\\"0 0 16 16\\" width=\\"16\\"><path d=\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\"></path></svg></a>Arbitraje</h2>\\n<p>Una característica muy importante de CAN es que cuenta con dos señales para la transmisión de datos: CAN H y CAN L, emiten el mismo\\nmensaje pero con lógica opuesta, la razón de esto es garantizar más seguridad y tolerancia a fallos.</p>\\n<p>Puesto que es un bus de nodos y no hay un orden específico para enviar mensajes, ocurre algo llamado arbitraje, en la\\nque los mensajes de mayor prioridad ocurren antes que los de menor prioridad.</p>\\n<h2 id=\\"tipos-de-mensajes\\"><a id=\\"user-content-tipos-de-mensajes\\" class=\\"anchor\\" href=\\"#tipos-de-mensajes\\" aria-hidden=\\"true\\"><svg aria-hidden=\\"true\\" class=\\"octicon octicon-link\\" height=\\"16\\" version=\\"1.1\\" viewbox=\\"0 0 16 16\\" width=\\"16\\"><path d=\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\"></path></svg></a>Tipos de mensajes</h2>\\n<p>En CAN hay 4 tipos de mensajes:</p>\\n<ul>\\n<li>Data Frame: es el mensaje más común, tal cual su nombre dice, es para transmitir datos.</li>\\n<li>Remote Frame: sirve para solicitar datos de otro nodo, los específica el bit RTR</li>\\n<li>Error Frame: es una trama que no cumple con lo especificado por CAN, si se envía una trama de error, todos los demás nodos enviarán una trama de error, la razón de esto es para que el nodo que envió el mensaje se entere de su error.</li>\\n<li>Valid Frame: una trama es libre de errores si el último bit de EOF es recibido.</li>\\n</ul>\\n<h1 id=\\"fin\\"><a id=\\"user-content-fin\\" class=\\"anchor\\" href=\\"#fin\\" aria-hidden=\\"true\\"><svg aria-hidden=\\"true\\" class=\\"octicon octicon-link\\" height=\\"16\\" version=\\"1.1\\" viewbox=\\"0 0 16 16\\" width=\\"16\\"><path d=\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\"></path></svg></a>Fin</h1>\\n<p>Aunque quedaron muchas cosas sin explicar, espero que haya servido como una pequeña introducción al protocolo CAN.</p>\\n<p>Es un protocolo muy interesante que deberías considerar si necesitas algo confiable o piensas utilizarlo en un sector como la automatización.</p>\\n",\n    \n      meta: {"resourcePath":"/home/runner/work/alan-blog/alan-blog/content/blog/2020-07-17-can.md"},\n     }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///284\n')}}]);